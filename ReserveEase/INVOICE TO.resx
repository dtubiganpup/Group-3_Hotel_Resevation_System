<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>